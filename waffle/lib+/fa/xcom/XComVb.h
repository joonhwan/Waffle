#pragma once

// ** header file generated by dumpcpp from type library
// ** C:\Program Files (x86)\IT Innovation\XComVb v2.x\SE\Bin\eXCom.ocx
#include "excomvblib.h"

// Signal ¿¬°á.
// connect(m_xcom, SIGNAL(SecsEvent(int,int)), SLOT(onSecsEvent(int,int)));
// connect(m_xcom, SIGNAL(SecsMsg()), SLOT(onSecsMsg()));
// connect(m_xcom, SIGNAL(signal(QString,int,void*)), SLOT(onSignal(QString,int,void*)));
class XComVb : public EXCOMVBLib::XComVb
{
public:
	XComVb(QWidget *parent = 0, Qt::WindowFlags f = 0);
	// int LoadSecsMsg(int& plMsgId, int& pnDevId, int& pnStrm, int& pnFunc, int& plSysByte, int& pnWbit);
	// int GetListArray(int lMsgId, int& pnItems);
	// void SetBinaryArray(int lMsgId, short* pnValue, int lCount);
	QList<bool> BoolArray();
	QByteArray BinaryArray();
	QList<double> F8Array();
	QList<double> U4Array();
	QList<double> U8Array();
	QList<float> F4Array();
	QList<long> I4Array();
	QList<long> I8Array();
	QList<long> U2Array();
	QList<short> I1Array();
	QList<short> I2Array();
	QList<short> U1Array();
	void SetBinaryArray(const QByteArray& valueArray);
	void SetBoolArray(const QList<bool>& valueArray);
	void SetF4Array(const QList<float>& valueArray);
	void SetF8Array(const QList<double>& valueArray);
	void SetI1Array(const QList<short>& valueArray);
	void SetI2Array(const QList<short>& valueArray);
	void SetI4Array(const QList<long>& valueArray);
	void SetI8Array(const QList<long>& valueArray);
	void SetU1Array(const QList<short>& valueArray);
	void SetU2Array(const QList<long>& valueArray);
	void SetU4Array(const QList<double>& valueArray);
	void SetU8Array(const QList<double>& valueArray);
	void SetBinaryArray(char* valueArray, int count); // NOTE: not `int*' but 'char*'!
	void SetBoolArray(bool* valueArray, int count);
	void SetF4Array(float* valueArray, int count);
	void SetF8Array(double* valueArray, int count);
	void SetI1Array(short* valueArray, int count);
	void SetI2Array(short* valueArray, int count);
	void SetI4Array(long* valueArray, int count);
	void SetI8Array(long* valueArray, int count);
	void SetU1Array(short* valueArray, int count);
	void SetU2Array(long* valueArray, int count);
	void SetU4Array(double* valueArray, int count);
	void SetU8Array(double* valueArray, int count);
private:
	QList<QVariant> vars2;
	QList<QVariant> vars3;
	QList<QVariant> vars4;
	QList<QVariant> vars5;
	QList<QVariant> vars6;
};

