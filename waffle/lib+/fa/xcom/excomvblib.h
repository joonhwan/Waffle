/****************************************************************************
**
** Namespace EXCOMVBLib generated by dumpcpp from type library
** eXComVb.ocx
**
****************************************************************************/

#ifndef QAX_DUMPCPP_EXCOMVBLIB_H
#define QAX_DUMPCPP_EXCOMVBLIB_H

// Define this symbol to __declspec(dllexport) or __declspec(dllimport)
#ifndef EXCOMVBLIB_EXPORT
#define EXCOMVBLIB_EXPORT
#endif

#include <qaxobject.h>
#include <qaxwidget.h>
#include <qdatetime.h>
#include <qpixmap.h>

struct IDispatch;


// Referenced namespace

namespace EXCOMVBLib {


class EXCOMVBLIB_EXPORT _DXComVb : public QAxObject
{
public:
    _DXComVb(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Ascii

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline QString Ascii() const; //Returns the value of Ascii
    inline void SetAscii(const QString& value); //Sets the value of the Ascii property

    /*
    Property Binary

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int Binary() const; //Returns the value of Binary
    inline void SetBinary(int value); //Sets the value of the Binary property

    /*
    Property Bool

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline bool Bool() const; //Returns the value of Bool
    inline void SetBool(bool value); //Sets the value of the Bool property

    /*
    Property EnableAlarmLog

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline bool EnableAlarmLog() const; //Returns the value of EnableAlarmLog
    inline void SetEnableAlarmLog(bool value); //Sets the value of the EnableAlarmLog property

    /*
    Property EnableEventLog

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline bool EnableEventLog() const; //Returns the value of EnableEventLog
    inline void SetEnableEventLog(bool value); //Sets the value of the EnableEventLog property

    /*
    Property EnableHexaLog

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline bool EnableHexaLog() const; //Returns the value of EnableHexaLog
    inline void SetEnableHexaLog(bool value); //Sets the value of the EnableHexaLog property

    /*
    Property EnableSecs2Log

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline bool EnableSecs2Log() const; //Returns the value of EnableSecs2Log
    inline void SetEnableSecs2Log(bool value); //Sets the value of the EnableSecs2Log property

    /*
    Property F4

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline double F4() const; //Returns the value of F4
    inline void SetF4(double value); //Sets the value of the F4 property

    /*
    Property F8

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline double F8() const; //Returns the value of F8
    inline void SetF8(double value); //Sets the value of the F8 property

    /*
    Property HeaderByte

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int HeaderByte() const; //Returns the value of HeaderByte
    inline void SetHeaderByte(int value); //Sets the value of the HeaderByte property

    /*
    Property HeaderSize

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int HeaderSize() const; //Returns the value of HeaderSize
    inline void SetHeaderSize(int value); //Sets the value of the HeaderSize property

    /*
    Property I1

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int I1() const; //Returns the value of I1
    inline void SetI1(int value); //Sets the value of the I1 property

    /*
    Property I2

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int I2() const; //Returns the value of I2
    inline void SetI2(int value); //Sets the value of the I2 property

    /*
    Property I4

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int I4() const; //Returns the value of I4
    inline void SetI4(int value); //Sets the value of the I4 property

    /*
    Property I8

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int I8() const; //Returns the value of I8
    inline void SetI8(int value); //Sets the value of the I8 property

    /*
    Property ItemCount

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int ItemCount() const; //Returns the value of ItemCount
    inline void SetItemCount(int value); //Sets the value of the ItemCount property

    /*
    Property Jis8

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline QString Jis8() const; //Returns the value of Jis8
    inline void SetJis8(const QString& value); //Sets the value of the Jis8 property

    /*
    Property List

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int List() const; //Returns the value of List
    inline void SetList(int value); //Sets the value of the List property

    /*
    Property MsgByte

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int MsgByte() const; //Returns the value of MsgByte
    inline void SetMsgByte(int value); //Sets the value of the MsgByte property

    /*
    Property MsgSize

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int MsgSize() const; //Returns the value of MsgSize
    inline void SetMsgSize(int value); //Sets the value of the MsgSize property

    /*
    Property NextItem

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int NextItem() const; //Returns the value of NextItem
    inline void SetNextItem(int value); //Sets the value of the NextItem property

    /*
    Property RBlock

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int RBlock() const; //Returns the value of RBlock
    inline void SetRBlock(int value); //Sets the value of the RBlock property

    /*
    Property RDeviceId

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int RDeviceId() const; //Returns the value of RDeviceId
    inline void SetRDeviceId(int value); //Sets the value of the RDeviceId property

    /*
    Property REbit

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int REbit() const; //Returns the value of REbit
    inline void SetREbit(int value); //Sets the value of the REbit property

    /*
    Property RFunction

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int RFunction() const; //Returns the value of RFunction
    inline void SetRFunction(int value); //Sets the value of the RFunction property

    /*
    Property RMsgId

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int RMsgId() const; //Returns the value of RMsgId
    inline void SetRMsgId(int value); //Sets the value of the RMsgId property

    /*
    Property RPType

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int RPType() const; //Returns the value of RPType
    inline void SetRPType(int value); //Sets the value of the RPType property

    /*
    Property RRbit

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int RRbit() const; //Returns the value of RRbit
    inline void SetRRbit(int value); //Sets the value of the RRbit property

    /*
    Property RSType

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int RSType() const; //Returns the value of RSType
    inline void SetRSType(int value); //Sets the value of the RSType property

    /*
    Property RStream

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int RStream() const; //Returns the value of RStream
    inline void SetRStream(int value); //Sets the value of the RStream property

    /*
    Property RSystemBytes

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int RSystemBytes() const; //Returns the value of RSystemBytes
    inline void SetRSystemBytes(int value); //Sets the value of the RSystemBytes property

    /*
    Property RWbit

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int RWbit() const; //Returns the value of RWbit
    inline void SetRWbit(int value); //Sets the value of the RWbit property

    /*
    Property SBlock

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int SBlock() const; //Returns the value of SBlock
    inline void SetSBlock(int value); //Sets the value of the SBlock property

    /*
    Property SDeviceId

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int SDeviceId() const; //Returns the value of SDeviceId
    inline void SetSDeviceId(int value); //Sets the value of the SDeviceId property

    /*
    Property SEbit

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int SEbit() const; //Returns the value of SEbit
    inline void SetSEbit(int value); //Sets the value of the SEbit property

    /*
    Property SFunction

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int SFunction() const; //Returns the value of SFunction
    inline void SetSFunction(int value); //Sets the value of the SFunction property

    /*
    Property SMsgId

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int SMsgId() const; //Returns the value of SMsgId
    inline void SetSMsgId(int value); //Sets the value of the SMsgId property

    /*
    Property SPType

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int SPType() const; //Returns the value of SPType
    inline void SetSPType(int value); //Sets the value of the SPType property

    /*
    Property SRbit

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int SRbit() const; //Returns the value of SRbit
    inline void SetSRbit(int value); //Sets the value of the SRbit property

    /*
    Property SSType

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int SSType() const; //Returns the value of SSType
    inline void SetSSType(int value); //Sets the value of the SSType property

    /*
    Property SStream

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int SStream() const; //Returns the value of SStream
    inline void SetSStream(int value); //Sets the value of the SStream property

    /*
    Property SSystemBytes

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int SSystemBytes() const; //Returns the value of SSystemBytes
    inline void SetSSystemBytes(int value); //Sets the value of the SSystemBytes property

    /*
    Property SWbit

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int SWbit() const; //Returns the value of SWbit
    inline void SetSWbit(int value); //Sets the value of the SWbit property

    /*
    Property U1

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int U1() const; //Returns the value of U1
    inline void SetU1(int value); //Sets the value of the U1 property

    /*
    Property U2

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int U2() const; //Returns the value of U2
    inline void SetU2(int value); //Sets the value of the U2 property

    /*
    Property U4

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline double U4() const; //Returns the value of U4
    inline void SetU4(double value); //Sets the value of the U4 property

    /*
    Property U8

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline double U8() const; //Returns the value of U8
    inline void SetU8(double value); //Sets the value of the U8 property

    /*
    Method Close

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int Close();

    /*
    Method CloseSecsMsg

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline void CloseSecsMsg();

    /*
    Method DebugInfo

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int DebugInfo(int& pnInfo);

    /*
    Method GetAlarmMsgInfo

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int GetAlarmMsgInfo(int lMsgId);

    /*
    Method GetInvalidMsgInfo

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int GetInvalidMsgInfo(int lMsgId);

    /*
    Method GetParam

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline QString GetParam(const QString& psParamName);

    /*
    Method GetRMsgSecsLog

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline QString GetRMsgSecsLog();

    /*
    Method GetSMsgSecsLog

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline QString GetSMsgSecsLog();

    /*
    Method Initialize

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int Initialize(const QString& sCfgFile);

    /*
    Method LoadSecsMsg

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int LoadSecsMsg();

    /*
    Method MakeSecsMsg

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int MakeSecsMsg(int nDeviceId, int nStream, int nFunction, int lSysByte);

    /*
    Method Send

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int Send();

    /*
    Method SetAsciiFillSpace

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int SetAsciiFillSpace(int nVal);

    /*
    Method SetParam

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int SetParam(const QString& psParamName, const QString& psVal);

    /*
    Method Start

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int Start();

    /*
    Method Stop

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int Stop();

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// skipping event interface _DXComVbEvents

// Actual coclasses
class EXCOMVBLIB_EXPORT XComVb : public QAxWidget
{
public:
    XComVb(QWidget *parent = 0, Qt::WindowFlags f = 0)
    : QAxWidget(parent, f)
    {
        setControl("{a12e3e11-9949-4a3f-bf3e-5f41123f8744}");
    }

    /*
    Property Ascii

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline QString Ascii() const; //Returns the value of Ascii
    inline void SetAscii(const QString& value); //Sets the value of the Ascii property

    /*
    Property Binary

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int Binary() const; //Returns the value of Binary
    inline void SetBinary(int value); //Sets the value of the Binary property

    /*
    Property Bool

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline bool Bool() const; //Returns the value of Bool
    inline void SetBool(bool value); //Sets the value of the Bool property

    /*
    Property EnableAlarmLog

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline bool EnableAlarmLog() const; //Returns the value of EnableAlarmLog
    inline void SetEnableAlarmLog(bool value); //Sets the value of the EnableAlarmLog property

    /*
    Property EnableEventLog

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline bool EnableEventLog() const; //Returns the value of EnableEventLog
    inline void SetEnableEventLog(bool value); //Sets the value of the EnableEventLog property

    /*
    Property EnableHexaLog

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline bool EnableHexaLog() const; //Returns the value of EnableHexaLog
    inline void SetEnableHexaLog(bool value); //Sets the value of the EnableHexaLog property

    /*
    Property EnableSecs2Log

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline bool EnableSecs2Log() const; //Returns the value of EnableSecs2Log
    inline void SetEnableSecs2Log(bool value); //Sets the value of the EnableSecs2Log property

    /*
    Property F4

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline double F4() const; //Returns the value of F4
    inline void SetF4(double value); //Sets the value of the F4 property

    /*
    Property F8

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline double F8() const; //Returns the value of F8
    inline void SetF8(double value); //Sets the value of the F8 property

    /*
    Property HeaderByte

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int HeaderByte() const; //Returns the value of HeaderByte
    inline void SetHeaderByte(int value); //Sets the value of the HeaderByte property

    /*
    Property HeaderSize

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int HeaderSize() const; //Returns the value of HeaderSize
    inline void SetHeaderSize(int value); //Sets the value of the HeaderSize property

    /*
    Property I1

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int I1() const; //Returns the value of I1
    inline void SetI1(int value); //Sets the value of the I1 property

    /*
    Property I2

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int I2() const; //Returns the value of I2
    inline void SetI2(int value); //Sets the value of the I2 property

    /*
    Property I4

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int I4() const; //Returns the value of I4
    inline void SetI4(int value); //Sets the value of the I4 property

    /*
    Property I8

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int I8() const; //Returns the value of I8
    inline void SetI8(int value); //Sets the value of the I8 property

    /*
    Property ItemCount

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int ItemCount() const; //Returns the value of ItemCount
    inline void SetItemCount(int value); //Sets the value of the ItemCount property

    /*
    Property Jis8

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline QString Jis8() const; //Returns the value of Jis8
    inline void SetJis8(const QString& value); //Sets the value of the Jis8 property

    /*
    Property List

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int List() const; //Returns the value of List
    inline void SetList(int value); //Sets the value of the List property

    /*
    Property MsgByte

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int MsgByte() const; //Returns the value of MsgByte
    inline void SetMsgByte(int value); //Sets the value of the MsgByte property

    /*
    Property MsgSize

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int MsgSize() const; //Returns the value of MsgSize
    inline void SetMsgSize(int value); //Sets the value of the MsgSize property

    /*
    Property NextItem

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int NextItem() const; //Returns the value of NextItem
    inline void SetNextItem(int value); //Sets the value of the NextItem property

    /*
    Property RBlock

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int RBlock() const; //Returns the value of RBlock
    inline void SetRBlock(int value); //Sets the value of the RBlock property

    /*
    Property RDeviceId

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int RDeviceId() const; //Returns the value of RDeviceId
    inline void SetRDeviceId(int value); //Sets the value of the RDeviceId property

    /*
    Property REbit

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int REbit() const; //Returns the value of REbit
    inline void SetREbit(int value); //Sets the value of the REbit property

    /*
    Property RFunction

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int RFunction() const; //Returns the value of RFunction
    inline void SetRFunction(int value); //Sets the value of the RFunction property

    /*
    Property RMsgId

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int RMsgId() const; //Returns the value of RMsgId
    inline void SetRMsgId(int value); //Sets the value of the RMsgId property

    /*
    Property RPType

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int RPType() const; //Returns the value of RPType
    inline void SetRPType(int value); //Sets the value of the RPType property

    /*
    Property RRbit

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int RRbit() const; //Returns the value of RRbit
    inline void SetRRbit(int value); //Sets the value of the RRbit property

    /*
    Property RSType

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int RSType() const; //Returns the value of RSType
    inline void SetRSType(int value); //Sets the value of the RSType property

    /*
    Property RStream

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int RStream() const; //Returns the value of RStream
    inline void SetRStream(int value); //Sets the value of the RStream property

    /*
    Property RSystemBytes

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int RSystemBytes() const; //Returns the value of RSystemBytes
    inline void SetRSystemBytes(int value); //Sets the value of the RSystemBytes property

    /*
    Property RWbit

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int RWbit() const; //Returns the value of RWbit
    inline void SetRWbit(int value); //Sets the value of the RWbit property

    /*
    Property SBlock

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int SBlock() const; //Returns the value of SBlock
    inline void SetSBlock(int value); //Sets the value of the SBlock property

    /*
    Property SDeviceId

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int SDeviceId() const; //Returns the value of SDeviceId
    inline void SetSDeviceId(int value); //Sets the value of the SDeviceId property

    /*
    Property SEbit

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int SEbit() const; //Returns the value of SEbit
    inline void SetSEbit(int value); //Sets the value of the SEbit property

    /*
    Property SFunction

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int SFunction() const; //Returns the value of SFunction
    inline void SetSFunction(int value); //Sets the value of the SFunction property

    /*
    Property SMsgId

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int SMsgId() const; //Returns the value of SMsgId
    inline void SetSMsgId(int value); //Sets the value of the SMsgId property

    /*
    Property SPType

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int SPType() const; //Returns the value of SPType
    inline void SetSPType(int value); //Sets the value of the SPType property

    /*
    Property SRbit

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int SRbit() const; //Returns the value of SRbit
    inline void SetSRbit(int value); //Sets the value of the SRbit property

    /*
    Property SSType

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int SSType() const; //Returns the value of SSType
    inline void SetSSType(int value); //Sets the value of the SSType property

    /*
    Property SStream

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int SStream() const; //Returns the value of SStream
    inline void SetSStream(int value); //Sets the value of the SStream property

    /*
    Property SSystemBytes

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int SSystemBytes() const; //Returns the value of SSystemBytes
    inline void SetSSystemBytes(int value); //Sets the value of the SSystemBytes property

    /*
    Property SWbit

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int SWbit() const; //Returns the value of SWbit
    inline void SetSWbit(int value); //Sets the value of the SWbit property

    /*
    Property U1

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int U1() const; //Returns the value of U1
    inline void SetU1(int value); //Sets the value of the U1 property

    /*
    Property U2

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int U2() const; //Returns the value of U2
    inline void SetU2(int value); //Sets the value of the U2 property

    /*
    Property U4

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline double U4() const; //Returns the value of U4
    inline void SetU4(double value); //Sets the value of the U4 property

    /*
    Property U8

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline double U8() const; //Returns the value of U8
    inline void SetU8(double value); //Sets the value of the U8 property

    /*
    Method Close

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int Close();

    /*
    Method CloseSecsMsg

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline void CloseSecsMsg();

    /*
    Method DebugInfo

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int DebugInfo(int& pnInfo);

    /*
    Method GetAlarmMsgInfo

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int GetAlarmMsgInfo(int lMsgId);

    /*
    Method GetInvalidMsgInfo

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int GetInvalidMsgInfo(int lMsgId);

    /*
    Method GetParam

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline QString GetParam(const QString& psParamName);

    /*
    Method GetRMsgSecsLog

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline QString GetRMsgSecsLog();

    /*
    Method GetSMsgSecsLog

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline QString GetSMsgSecsLog();

    /*
    Method Initialize

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int Initialize(const QString& sCfgFile);

    /*
    Method LoadSecsMsg

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int LoadSecsMsg();

    /*
    Method MakeSecsMsg

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int MakeSecsMsg(int nDeviceId, int nStream, int nFunction, int lSysByte);

    /*
    Method Send

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int Send();

    /*
    Method SetAsciiFillSpace

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int SetAsciiFillSpace(int nVal);

    /*
    Method SetParam

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int SetParam(const QString& psParamName, const QString& psVal);

    /*
    Method Start

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int Start();

    /*
    Method Stop

    For more information, see help context 0 in C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXComVb.hlp.
    */
    inline int Stop();

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// member function implementation
#ifndef QAX_DUMPCPP_EXCOMVBLIB_NOINLINES
inline QString _DXComVb::Ascii() const
{
    QVariant qax_result = property("Ascii");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _DXComVb::SetAscii(const QString& value){ setProperty("Ascii", QVariant(value)); }

inline int _DXComVb::Binary() const
{
    QVariant qax_result = property("Binary");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXComVb::SetBinary(int value){ setProperty("Binary", QVariant(value)); }

inline bool _DXComVb::Bool() const
{
    QVariant qax_result = property("Bool");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _DXComVb::SetBool(bool value){ setProperty("Bool", QVariant(value)); }

inline bool _DXComVb::EnableAlarmLog() const
{
    QVariant qax_result = property("EnableAlarmLog");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _DXComVb::SetEnableAlarmLog(bool value){ setProperty("EnableAlarmLog", QVariant(value)); }

inline bool _DXComVb::EnableEventLog() const
{
    QVariant qax_result = property("EnableEventLog");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _DXComVb::SetEnableEventLog(bool value){ setProperty("EnableEventLog", QVariant(value)); }

inline bool _DXComVb::EnableHexaLog() const
{
    QVariant qax_result = property("EnableHexaLog");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _DXComVb::SetEnableHexaLog(bool value){ setProperty("EnableHexaLog", QVariant(value)); }

inline bool _DXComVb::EnableSecs2Log() const
{
    QVariant qax_result = property("EnableSecs2Log");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _DXComVb::SetEnableSecs2Log(bool value){ setProperty("EnableSecs2Log", QVariant(value)); }

inline double _DXComVb::F4() const
{
    QVariant qax_result = property("F4");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void _DXComVb::SetF4(double value){ setProperty("F4", QVariant(value)); }

inline double _DXComVb::F8() const
{
    QVariant qax_result = property("F8");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void _DXComVb::SetF8(double value){ setProperty("F8", QVariant(value)); }

inline int _DXComVb::HeaderByte() const
{
    QVariant qax_result = property("HeaderByte");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXComVb::SetHeaderByte(int value){ setProperty("HeaderByte", QVariant(value)); }

inline int _DXComVb::HeaderSize() const
{
    QVariant qax_result = property("HeaderSize");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXComVb::SetHeaderSize(int value){ setProperty("HeaderSize", QVariant(value)); }

inline int _DXComVb::I1() const
{
    QVariant qax_result = property("I1");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXComVb::SetI1(int value){ setProperty("I1", QVariant(value)); }

inline int _DXComVb::I2() const
{
    QVariant qax_result = property("I2");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXComVb::SetI2(int value){ setProperty("I2", QVariant(value)); }

inline int _DXComVb::I4() const
{
    QVariant qax_result = property("I4");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXComVb::SetI4(int value){ setProperty("I4", QVariant(value)); }

inline int _DXComVb::I8() const
{
    QVariant qax_result = property("I8");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXComVb::SetI8(int value){ setProperty("I8", QVariant(value)); }

inline int _DXComVb::ItemCount() const
{
    QVariant qax_result = property("ItemCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXComVb::SetItemCount(int value){ setProperty("ItemCount", QVariant(value)); }

inline QString _DXComVb::Jis8() const
{
    QVariant qax_result = property("Jis8");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _DXComVb::SetJis8(const QString& value){ setProperty("Jis8", QVariant(value)); }

inline int _DXComVb::List() const
{
    QVariant qax_result = property("List");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXComVb::SetList(int value){ setProperty("List", QVariant(value)); }

inline int _DXComVb::MsgByte() const
{
    QVariant qax_result = property("MsgByte");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXComVb::SetMsgByte(int value){ setProperty("MsgByte", QVariant(value)); }

inline int _DXComVb::MsgSize() const
{
    QVariant qax_result = property("MsgSize");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXComVb::SetMsgSize(int value){ setProperty("MsgSize", QVariant(value)); }

inline int _DXComVb::NextItem() const
{
    QVariant qax_result = property("NextItem");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXComVb::SetNextItem(int value){ setProperty("NextItem", QVariant(value)); }

inline int _DXComVb::RBlock() const
{
    QVariant qax_result = property("RBlock");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXComVb::SetRBlock(int value){ setProperty("RBlock", QVariant(value)); }

inline int _DXComVb::RDeviceId() const
{
    QVariant qax_result = property("RDeviceId");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXComVb::SetRDeviceId(int value){ setProperty("RDeviceId", QVariant(value)); }

inline int _DXComVb::REbit() const
{
    QVariant qax_result = property("REbit");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXComVb::SetREbit(int value){ setProperty("REbit", QVariant(value)); }

inline int _DXComVb::RFunction() const
{
    QVariant qax_result = property("RFunction");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXComVb::SetRFunction(int value){ setProperty("RFunction", QVariant(value)); }

inline int _DXComVb::RMsgId() const
{
    QVariant qax_result = property("RMsgId");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXComVb::SetRMsgId(int value){ setProperty("RMsgId", QVariant(value)); }

inline int _DXComVb::RPType() const
{
    QVariant qax_result = property("RPType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXComVb::SetRPType(int value){ setProperty("RPType", QVariant(value)); }

inline int _DXComVb::RRbit() const
{
    QVariant qax_result = property("RRbit");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXComVb::SetRRbit(int value){ setProperty("RRbit", QVariant(value)); }

inline int _DXComVb::RSType() const
{
    QVariant qax_result = property("RSType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXComVb::SetRSType(int value){ setProperty("RSType", QVariant(value)); }

inline int _DXComVb::RStream() const
{
    QVariant qax_result = property("RStream");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXComVb::SetRStream(int value){ setProperty("RStream", QVariant(value)); }

inline int _DXComVb::RSystemBytes() const
{
    QVariant qax_result = property("RSystemBytes");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXComVb::SetRSystemBytes(int value){ setProperty("RSystemBytes", QVariant(value)); }

inline int _DXComVb::RWbit() const
{
    QVariant qax_result = property("RWbit");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXComVb::SetRWbit(int value){ setProperty("RWbit", QVariant(value)); }

inline int _DXComVb::SBlock() const
{
    QVariant qax_result = property("SBlock");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXComVb::SetSBlock(int value){ setProperty("SBlock", QVariant(value)); }

inline int _DXComVb::SDeviceId() const
{
    QVariant qax_result = property("SDeviceId");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXComVb::SetSDeviceId(int value){ setProperty("SDeviceId", QVariant(value)); }

inline int _DXComVb::SEbit() const
{
    QVariant qax_result = property("SEbit");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXComVb::SetSEbit(int value){ setProperty("SEbit", QVariant(value)); }

inline int _DXComVb::SFunction() const
{
    QVariant qax_result = property("SFunction");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXComVb::SetSFunction(int value){ setProperty("SFunction", QVariant(value)); }

inline int _DXComVb::SMsgId() const
{
    QVariant qax_result = property("SMsgId");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXComVb::SetSMsgId(int value){ setProperty("SMsgId", QVariant(value)); }

inline int _DXComVb::SPType() const
{
    QVariant qax_result = property("SPType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXComVb::SetSPType(int value){ setProperty("SPType", QVariant(value)); }

inline int _DXComVb::SRbit() const
{
    QVariant qax_result = property("SRbit");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXComVb::SetSRbit(int value){ setProperty("SRbit", QVariant(value)); }

inline int _DXComVb::SSType() const
{
    QVariant qax_result = property("SSType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXComVb::SetSSType(int value){ setProperty("SSType", QVariant(value)); }

inline int _DXComVb::SStream() const
{
    QVariant qax_result = property("SStream");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXComVb::SetSStream(int value){ setProperty("SStream", QVariant(value)); }

inline int _DXComVb::SSystemBytes() const
{
    QVariant qax_result = property("SSystemBytes");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXComVb::SetSSystemBytes(int value){ setProperty("SSystemBytes", QVariant(value)); }

inline int _DXComVb::SWbit() const
{
    QVariant qax_result = property("SWbit");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXComVb::SetSWbit(int value){ setProperty("SWbit", QVariant(value)); }

inline int _DXComVb::U1() const
{
    QVariant qax_result = property("U1");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXComVb::SetU1(int value){ setProperty("U1", QVariant(value)); }

inline int _DXComVb::U2() const
{
    QVariant qax_result = property("U2");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _DXComVb::SetU2(int value){ setProperty("U2", QVariant(value)); }

inline double _DXComVb::U4() const
{
    QVariant qax_result = property("U4");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void _DXComVb::SetU4(double value){ setProperty("U4", QVariant(value)); }

inline double _DXComVb::U8() const
{
    QVariant qax_result = property("U8");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void _DXComVb::SetU8(double value){ setProperty("U8", QVariant(value)); }

inline int _DXComVb::Close()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline void _DXComVb::CloseSecsMsg()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline int _DXComVb::DebugInfo(int& pnInfo)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pnInfo};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline int _DXComVb::GetAlarmMsgInfo(int lMsgId)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&lMsgId};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline int _DXComVb::GetInvalidMsgInfo(int lMsgId)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&lMsgId};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline QString _DXComVb::GetParam(const QString& psParamName)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&psParamName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline QString _DXComVb::GetRMsgSecsLog()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline QString _DXComVb::GetSMsgSecsLog()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline int _DXComVb::Initialize(const QString& sCfgFile)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&sCfgFile};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline int _DXComVb::LoadSecsMsg()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline int _DXComVb::MakeSecsMsg(int nDeviceId, int nStream, int nFunction, int lSysByte)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nDeviceId, (void*)&nStream, (void*)&nFunction, (void*)&lSysByte};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline int _DXComVb::Send()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline int _DXComVb::SetAsciiFillSpace(int nVal)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nVal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline int _DXComVb::SetParam(const QString& psParamName, const QString& psVal)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&psParamName, (void*)&psVal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 41, _a);
    return qax_result;
}

inline int _DXComVb::Start()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 68, _a);
    return qax_result;
}

inline int _DXComVb::Stop()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 69, _a);
    return qax_result;
}


inline QString XComVb::Ascii() const
{
    QVariant qax_result = property("Ascii");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void XComVb::SetAscii(const QString& value){ setProperty("Ascii", QVariant(value)); }

inline int XComVb::Binary() const
{
    QVariant qax_result = property("Binary");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XComVb::SetBinary(int value){ setProperty("Binary", QVariant(value)); }

inline bool XComVb::Bool() const
{
    QVariant qax_result = property("Bool");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void XComVb::SetBool(bool value){ setProperty("Bool", QVariant(value)); }

inline bool XComVb::EnableAlarmLog() const
{
    QVariant qax_result = property("EnableAlarmLog");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void XComVb::SetEnableAlarmLog(bool value){ setProperty("EnableAlarmLog", QVariant(value)); }

inline bool XComVb::EnableEventLog() const
{
    QVariant qax_result = property("EnableEventLog");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void XComVb::SetEnableEventLog(bool value){ setProperty("EnableEventLog", QVariant(value)); }

inline bool XComVb::EnableHexaLog() const
{
    QVariant qax_result = property("EnableHexaLog");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void XComVb::SetEnableHexaLog(bool value){ setProperty("EnableHexaLog", QVariant(value)); }

inline bool XComVb::EnableSecs2Log() const
{
    QVariant qax_result = property("EnableSecs2Log");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void XComVb::SetEnableSecs2Log(bool value){ setProperty("EnableSecs2Log", QVariant(value)); }

inline double XComVb::F4() const
{
    QVariant qax_result = property("F4");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void XComVb::SetF4(double value){ setProperty("F4", QVariant(value)); }

inline double XComVb::F8() const
{
    QVariant qax_result = property("F8");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void XComVb::SetF8(double value){ setProperty("F8", QVariant(value)); }

inline int XComVb::HeaderByte() const
{
    QVariant qax_result = property("HeaderByte");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XComVb::SetHeaderByte(int value){ setProperty("HeaderByte", QVariant(value)); }

inline int XComVb::HeaderSize() const
{
    QVariant qax_result = property("HeaderSize");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XComVb::SetHeaderSize(int value){ setProperty("HeaderSize", QVariant(value)); }

inline int XComVb::I1() const
{
    QVariant qax_result = property("I1");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XComVb::SetI1(int value){ setProperty("I1", QVariant(value)); }

inline int XComVb::I2() const
{
    QVariant qax_result = property("I2");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XComVb::SetI2(int value){ setProperty("I2", QVariant(value)); }

inline int XComVb::I4() const
{
    QVariant qax_result = property("I4");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XComVb::SetI4(int value){ setProperty("I4", QVariant(value)); }

inline int XComVb::I8() const
{
    QVariant qax_result = property("I8");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XComVb::SetI8(int value){ setProperty("I8", QVariant(value)); }

inline int XComVb::ItemCount() const
{
    QVariant qax_result = property("ItemCount");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XComVb::SetItemCount(int value){ setProperty("ItemCount", QVariant(value)); }

inline QString XComVb::Jis8() const
{
    QVariant qax_result = property("Jis8");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void XComVb::SetJis8(const QString& value){ setProperty("Jis8", QVariant(value)); }

inline int XComVb::List() const
{
    QVariant qax_result = property("List");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XComVb::SetList(int value){ setProperty("List", QVariant(value)); }

inline int XComVb::MsgByte() const
{
    QVariant qax_result = property("MsgByte");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XComVb::SetMsgByte(int value){ setProperty("MsgByte", QVariant(value)); }

inline int XComVb::MsgSize() const
{
    QVariant qax_result = property("MsgSize");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XComVb::SetMsgSize(int value){ setProperty("MsgSize", QVariant(value)); }

inline int XComVb::NextItem() const
{
    QVariant qax_result = property("NextItem");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XComVb::SetNextItem(int value){ setProperty("NextItem", QVariant(value)); }

inline int XComVb::RBlock() const
{
    QVariant qax_result = property("RBlock");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XComVb::SetRBlock(int value){ setProperty("RBlock", QVariant(value)); }

inline int XComVb::RDeviceId() const
{
    QVariant qax_result = property("RDeviceId");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XComVb::SetRDeviceId(int value){ setProperty("RDeviceId", QVariant(value)); }

inline int XComVb::REbit() const
{
    QVariant qax_result = property("REbit");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XComVb::SetREbit(int value){ setProperty("REbit", QVariant(value)); }

inline int XComVb::RFunction() const
{
    QVariant qax_result = property("RFunction");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XComVb::SetRFunction(int value){ setProperty("RFunction", QVariant(value)); }

inline int XComVb::RMsgId() const
{
    QVariant qax_result = property("RMsgId");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XComVb::SetRMsgId(int value){ setProperty("RMsgId", QVariant(value)); }

inline int XComVb::RPType() const
{
    QVariant qax_result = property("RPType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XComVb::SetRPType(int value){ setProperty("RPType", QVariant(value)); }

inline int XComVb::RRbit() const
{
    QVariant qax_result = property("RRbit");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XComVb::SetRRbit(int value){ setProperty("RRbit", QVariant(value)); }

inline int XComVb::RSType() const
{
    QVariant qax_result = property("RSType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XComVb::SetRSType(int value){ setProperty("RSType", QVariant(value)); }

inline int XComVb::RStream() const
{
    QVariant qax_result = property("RStream");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XComVb::SetRStream(int value){ setProperty("RStream", QVariant(value)); }

inline int XComVb::RSystemBytes() const
{
    QVariant qax_result = property("RSystemBytes");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XComVb::SetRSystemBytes(int value){ setProperty("RSystemBytes", QVariant(value)); }

inline int XComVb::RWbit() const
{
    QVariant qax_result = property("RWbit");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XComVb::SetRWbit(int value){ setProperty("RWbit", QVariant(value)); }

inline int XComVb::SBlock() const
{
    QVariant qax_result = property("SBlock");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XComVb::SetSBlock(int value){ setProperty("SBlock", QVariant(value)); }

inline int XComVb::SDeviceId() const
{
    QVariant qax_result = property("SDeviceId");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XComVb::SetSDeviceId(int value){ setProperty("SDeviceId", QVariant(value)); }

inline int XComVb::SEbit() const
{
    QVariant qax_result = property("SEbit");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XComVb::SetSEbit(int value){ setProperty("SEbit", QVariant(value)); }

inline int XComVb::SFunction() const
{
    QVariant qax_result = property("SFunction");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XComVb::SetSFunction(int value){ setProperty("SFunction", QVariant(value)); }

inline int XComVb::SMsgId() const
{
    QVariant qax_result = property("SMsgId");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XComVb::SetSMsgId(int value){ setProperty("SMsgId", QVariant(value)); }

inline int XComVb::SPType() const
{
    QVariant qax_result = property("SPType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XComVb::SetSPType(int value){ setProperty("SPType", QVariant(value)); }

inline int XComVb::SRbit() const
{
    QVariant qax_result = property("SRbit");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XComVb::SetSRbit(int value){ setProperty("SRbit", QVariant(value)); }

inline int XComVb::SSType() const
{
    QVariant qax_result = property("SSType");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XComVb::SetSSType(int value){ setProperty("SSType", QVariant(value)); }

inline int XComVb::SStream() const
{
    QVariant qax_result = property("SStream");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XComVb::SetSStream(int value){ setProperty("SStream", QVariant(value)); }

inline int XComVb::SSystemBytes() const
{
    QVariant qax_result = property("SSystemBytes");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XComVb::SetSSystemBytes(int value){ setProperty("SSystemBytes", QVariant(value)); }

inline int XComVb::SWbit() const
{
    QVariant qax_result = property("SWbit");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XComVb::SetSWbit(int value){ setProperty("SWbit", QVariant(value)); }

inline int XComVb::U1() const
{
    QVariant qax_result = property("U1");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XComVb::SetU1(int value){ setProperty("U1", QVariant(value)); }

inline int XComVb::U2() const
{
    QVariant qax_result = property("U2");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void XComVb::SetU2(int value){ setProperty("U2", QVariant(value)); }

inline double XComVb::U4() const
{
    QVariant qax_result = property("U4");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void XComVb::SetU4(double value){ setProperty("U4", QVariant(value)); }

inline double XComVb::U8() const
{
    QVariant qax_result = property("U8");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void XComVb::SetU8(double value){ setProperty("U8", QVariant(value)); }

inline int XComVb::Close()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 32, _a);
    return qax_result;
}

inline void XComVb::CloseSecsMsg()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 33, _a);
}

inline int XComVb::DebugInfo(int& pnInfo)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pnInfo};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
    return qax_result;
}

inline int XComVb::GetAlarmMsgInfo(int lMsgId)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&lMsgId};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
    return qax_result;
}

inline int XComVb::GetInvalidMsgInfo(int lMsgId)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&lMsgId};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
    return qax_result;
}

inline QString XComVb::GetParam(const QString& psParamName)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&psParamName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
    return qax_result;
}

inline QString XComVb::GetRMsgSecsLog()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
    return qax_result;
}

inline QString XComVb::GetSMsgSecsLog()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
    return qax_result;
}

inline int XComVb::Initialize(const QString& sCfgFile)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&sCfgFile};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
    return qax_result;
}

inline int XComVb::LoadSecsMsg()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 41, _a);
    return qax_result;
}

inline int XComVb::MakeSecsMsg(int nDeviceId, int nStream, int nFunction, int lSysByte)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nDeviceId, (void*)&nStream, (void*)&nFunction, (void*)&lSysByte};
    qt_metacall(QMetaObject::InvokeMetaMethod, 42, _a);
    return qax_result;
}

inline int XComVb::Send()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 43, _a);
    return qax_result;
}

inline int XComVb::SetAsciiFillSpace(int nVal)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&nVal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 45, _a);
    return qax_result;
}

inline int XComVb::SetParam(const QString& psParamName, const QString& psVal)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&psParamName, (void*)&psVal};
    qt_metacall(QMetaObject::InvokeMetaMethod, 66, _a);
    return qax_result;
}

inline int XComVb::Start()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 93, _a);
    return qax_result;
}

inline int XComVb::Stop()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 94, _a);
    return qax_result;
}



#endif

}

template<>
inline void *qMetaTypeConstructHelper(const EXCOMVBLib::_DXComVb *t)
{ Q_ASSERT(!t); return new EXCOMVBLib::_DXComVb; }

template<>
inline void *qMetaTypeConstructHelper(const EXCOMVBLib::XComVb *t)
{ Q_ASSERT(!t); return new EXCOMVBLib::XComVb; }

#endif

