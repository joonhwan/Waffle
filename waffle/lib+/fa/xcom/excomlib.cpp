/****************************************************************************
**
** Metadata for EXCOMLib generated by dumpcpp from type library
** C:\Program Files (x86)\IT Innovation\XCom v2.x\SE\Bin\eXCom.ocx
**
****************************************************************************/

#define QAX_DUMPCPP_EXCOMLIB_NOINLINES
#include "excomlib.h"

using namespace EXCOMLib;

static const uint qt_meta_data_EXCOMLib___DeXCom[] = {

 // content:
       1,       // revision
       0,       // classname
       0,    0, // classinfo
       74,    10, // methods
       13,    380, // properties
       0,    0, // enums/sets

 // signals: signature, parameters, type, tag, flags
       18, 57, 79, 80, 5,
       81, 106, 111, 112, 5,
       113, 139, 154, 155, 5,

 // slots: signature, parameters, type, tag, flags
       156, 164, 165, 169, 9,
       170, 188, 195, 196, 9,
       197, 213, 220, 224, 9,
       225, 244, 262, 266, 9,
       267, 300, 362, 366, 9,
       367, 413, 459, 463, 9,
       464, 496, 519, 523, 9,
       524, 557, 586, 590, 9,
       591, 622, 651, 655, 9,
       656, 681, 688, 692, 9,
       693, 717, 724, 728, 9,
       729, 761, 790, 794, 9,
       795, 827, 856, 860, 9,
       861, 890, 912, 916, 9,
       917, 946, 975, 979, 9,
       980, 1009, 1038, 1042, 9,
       1043, 1072, 1101, 1105, 9,
       1106, 1135, 1164, 1168, 9,
       1169, 1217, 1263, 1267, 9,
       1268, 1299, 1322, 1326, 9,
       1327, 1349, 1364, 1368, 9,
       1369, 1395, 1414, 1418, 9,
       1419, 1437, 1450, 1458, 9,
       1459, 1475, 1482, 1490, 9,
       1491, 1515, 1530, 1538, 9,
       1539, 1556, 1563, 1567, 9,
       1568, 1597, 1626, 1630, 9,
       1631, 1660, 1689, 1693, 9,
       1694, 1726, 1755, 1759, 9,
       1760, 1792, 1821, 1825, 9,
       1826, 1846, 1855, 1859, 9,
       1860, 1903, 1950, 1954, 9,
       1955, 1989, 2025, 2029, 9,
       2030, 2051, 2058, 2062, 9,
       2063, 2092, 2104, 2108, 9,
       2109, 2119, 2126, 2130, 9,
       2131, 2154, 2159, 2163, 9,
       2164, 2194, 2217, 2221, 9,
       2222, 2250, 2272, 2276, 9,
       2277, 2291, 2297, 2298, 9,
       2299, 2325, 2347, 2351, 9,
       2352, 2369, 2378, 2379, 9,
       2380, 2393, 2398, 2399, 9,
       2400, 2427, 2449, 2453, 9,
       2454, 2481, 2503, 2507, 9,
       2508, 2525, 2534, 2535, 9,
       2536, 2565, 2587, 2591, 9,
       2592, 2611, 2622, 2623, 9,
       2624, 2648, 2670, 2674, 9,
       2675, 2699, 2721, 2725, 9,
       2726, 2750, 2772, 2776, 9,
       2777, 2801, 2823, 2827, 9,
       2828, 2857, 2880, 2884, 9,
       2885, 2906, 2920, 2924, 9,
       2925, 2951, 2970, 2974, 9,
       2975, 2991, 2999, 3000, 9,
       3001, 3015, 3021, 3022, 9,
       3023, 3049, 3067, 3071, 9,
       3072, 3085, 3090, 3091, 9,
       3092, 3106, 3112, 3113, 9,
       3114, 3129, 3136, 3137, 9,
       3138, 3170, 3195, 3199, 9,
       3200, 3220, 3232, 3233, 9,
       3234, 3258, 3280, 3284, 9,
       3285, 3309, 3331, 3335, 9,
       3336, 3363, 3385, 3389, 9,
       3390, 3417, 3439, 3443, 9,
       3444, 3461, 3474, 3478, 9,
       3479, 3492, 3497, 3498, 9,
       3499, 3507, 3508, 3512, 9,
       3513, 3520, 3521, 3525, 9,

 // properties: name, type, flags
       3526, 3532, 0x02015003, 		 // int Block
       3536, 3545, 0x02015003, 		 // int DeviceID
       3549, 3554, 0x02015003, 		 // int Ebit
       3558, 3567, 0x02015003, 		 // int Function
       3571, 3582, 0x02015003, 		 // int HeaderSize
       3586, 3594, 0x02015003, 		 // int MsgSize
       3598, 3604, 0x02015003, 		 // int PType
       3608, 3613, 0x02015003, 		 // int Rbit
       3617, 3623, 0x02015003, 		 // int SType
       3627, 3634, 0x02015003, 		 // int Stream
       3638, 3650, 0x02015003, 		 // int SystemBytes
       3654, 3659, 0x02015003, 		 // int Wbit
       3663, 3671, 0x0a055003, 		 // QString control

        0        // eod
};

static const char *qt_meta_stringdata_EXCOMLib___DeXCom() {
    static const char stringdata0[] = {
    "EXCOMLib::_DeXCom\0"
    "exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0name,argc,argv\0\0\0"
    "Close()\0\0int\0\0CloseSecsMsg(int)\0lMsgId\0\0\0DebugInfo(int&)\0pnInfo\0"
    "int\0\0EnableLog(int,int)\0nLogType,nEnabled\0int\0\0GeneralCall(int,int,int,int,int)\0lMsgId,nDispatchId,lpDispatchData,lDispatchArg1,lDispatchArg2\0int\0\0GetAlarmMsgInfo(int,int&,int&,int&,int&,int&)\0lMsgId,pnDevId,pnStrm,pnFunc,plSysByte,pnWbit\0"
    "int\0\0GetAsciiItem(int,QString&,int&)\0lMsgId,psValue,plCount\0int\0\0GetBinaryItem(int,int&,int&,int)\0lMsgId,pnValue,plCount,lSize\0int\0\0GetBoolItem(int,int&,int&,int)\0lMsgId,pnValue,plCount,lSize\0int\0\0GetCurrentItemCount(int)\0"
    "lMsgId\0int\0\0GetCurrentItemType(int)\0lMsgId\0int\0\0GetF4Item(int,double&,int&,int)\0lMsgId,prValue,plCount,lSize\0int\0\0GetF8Item(int,double&,int&,int)\0lMsgId,prValue,plCount,lSize\0int\0\0GetHeaderBytes(int,int&,int)\0"
    "lMsgId,pnHeader,nSize\0int\0\0GetI1Item(int,int&,int&,int)\0lMsgId,pnValue,plCount,lSize\0int\0\0GetI2Item(int,int&,int&,int)\0lMsgId,pnValue,plCount,lSize\0int\0\0GetI4Item(int,int&,int&,int)\0lMsgId,plValue,plCount,lSize\0"
    "int\0\0GetI8Item(int,int&,int&,int)\0lMsgId,plValue,plCount,lSize\0int\0\0GetInvalidMsgInfo(int,int&,int&,int&,int&,int&)\0lMsgId,pnDevId,pnStrm,pnFunc,plSysByte,pnWbit\0int\0\0GetJis8Item(int,QString&,int&)\0lMsgId,psValue,plCount\0"
    "int\0\0GetListItem(int,int&)\0lMsgId,pnItems\0int\0\0GetMsgBytes(int,int&,int)\0lMsgId,pnMsg,lSize\0int\0\0GetParam(QString)\0pszParamName\0QString\0\0GetSecsLog(int)\0lMsgId\0QString\0\0GetStringItem(int,int&)\0lMsgId,plCount\0"
    "QString\0\0GetSysBytes(int)\0lMsgId\0int\0\0GetU1Item(int,int&,int&,int)\0lMsgId,pnValue,plCount,lSize\0int\0\0GetU2Item(int,int&,int&,int)\0lMsgId,plValue,plCount,lSize\0int\0\0GetU4Item(int,double&,int&,int)\0lMsgId,prValue,plCount,lSize\0"
    "int\0\0GetU8Item(int,double&,int&,int)\0lMsgId,prValue,plCount,lSize\0int\0\0Initialize(QString)\0sCfgFile\0int\0\0LoadSecsMsg(int&,int&,int&,int&,int&,int&)\0plMsgId,pnDevId,pnStrm,pnFunc,plSysByte,pnWbit\0int\0\0MakeSecsMsg(int&,int,int,int,int)\0"
    "plMsgId,nDevId,nStrm,nFunc,lSysByte\0int\0\0MakeSpoolStream(int)\0lMsgId\0int\0\0ProcExternalStream(int&,int)\0pnMsg,lSize\0int\0\0Send(int)\0lMsgId\0int\0\0SetAsciiFillSpace(int)\0nVal\0int\0\0SetAsciiItem(int,QString,int)\0"
    "lMsgId,pszValue,lCount\0int\0\0SetBinaryItem(int,int&,int)\0lMsgId,pnValue,lCount\0int\0\0SetBlock(int)\0Block\0\0\0SetBoolItem(int,int&,int)\0lMsgId,pnValue,lCount\0int\0\0SetDeviceID(int)\0DeviceID\0\0\0SetEbit(int)\0Ebit\0"
    "\0\0SetF4Item(int,double&,int)\0lMsgId,prValue,lCount\0int\0\0SetF8Item(int,double&,int)\0lMsgId,prValue,lCount\0int\0\0SetFunction(int)\0Function\0\0\0SetHeaderBytes(int,int&,int)\0lMsgId,pnHeader,nSize\0int\0\0SetHeaderSize(int)\0"
    "HeaderSize\0\0\0SetI1Item(int,int&,int)\0lMsgId,pnValue,lCount\0int\0\0SetI2Item(int,int&,int)\0lMsgId,pnValue,lCount\0int\0\0SetI4Item(int,int&,int)\0lMsgId,plValue,lCount\0int\0\0SetI8Item(int,int&,int)\0lMsgId,plValue,lCount\0"
    "int\0\0SetJis8Item(int,QString,int)\0lMsgId,pszValue,lCount\0int\0\0SetListItem(int,int)\0lMsgId,nItems\0int\0\0SetMsgBytes(int,int&,int)\0lMsgId,pnMsg,lSize\0int\0\0SetMsgSize(int)\0MsgSize\0\0\0SetPType(int)\0PType\0\0\0SetParam(QString,QString)\0"
    "psParamName,psVal\0int\0\0SetRbit(int)\0Rbit\0\0\0SetSType(int)\0SType\0\0\0SetStream(int)\0Stream\0\0\0SetStringItem(int,QString&,int)\0lMsgId,pbstrValue,lCount\0int\0\0SetSystemBytes(int)\0SystemBytes\0\0\0SetU1Item(int,int&,int)\0"
    "lMsgId,pnValue,lCount\0int\0\0SetU2Item(int,int&,int)\0lMsgId,plValue,lCount\0int\0\0SetU4Item(int,double&,int)\0lMsgId,prValue,lCount\0int\0\0SetU8Item(int,double&,int)\0lMsgId,prValue,lCount\0int\0\0SetWBit(int,int)\0"
    "lMsgId,nWBit\0int\0\0SetWbit(int)\0Wbit\0\0\0Start()\0\0int\0\0Stop()\0\0int\0\0"
    "Block\0int\0DeviceID\0int\0Ebit\0int\0Function\0int\0HeaderSize\0int\0MsgSize\0int\0PType\0int\0Rbit\0int\0SType\0int\0Stream\0int\0SystemBytes\0int\0Wbit\0int\0"
    "control\0QString\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject _DeXCom::staticMetaObject = {
{ &QObject::staticMetaObject,
qt_meta_stringdata_EXCOMLib___DeXCom(),
qt_meta_data_EXCOMLib___DeXCom }
};

void *_DeXCom::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_EXCOMLib___DeXCom()))
        return static_cast<void*>(const_cast<_DeXCom*>(this));
    return QAxObject::qt_metacast(_clname);
}

static const uint qt_meta_data_EXCOMLib__eXCom[] = {

 // content:
       1,       // revision
       0,       // classname
       1,    10, // classinfo
       76,    12, // methods
       12,    392, // properties
       0,    0, // enums/sets

 // classinfo: key, value
       16, 34, 

 // signals: signature, parameters, type, tag, flags
       48, 67, 83, 84, 5,
       85, 95, 96, 97, 5,
       98, 137, 159, 160, 5,
       161, 186, 191, 192, 5,
       193, 219, 234, 235, 5,

 // slots: signature, parameters, type, tag, flags
       236, 244, 245, 249, 9,
       250, 268, 275, 276, 9,
       277, 293, 300, 304, 9,
       305, 324, 342, 346, 9,
       347, 380, 442, 446, 9,
       447, 493, 539, 543, 9,
       544, 576, 599, 603, 9,
       604, 637, 666, 670, 9,
       671, 702, 731, 735, 9,
       736, 761, 768, 772, 9,
       773, 797, 804, 808, 9,
       809, 841, 870, 874, 9,
       875, 907, 936, 940, 9,
       941, 970, 992, 996, 9,
       997, 1026, 1055, 1059, 9,
       1060, 1089, 1118, 1122, 9,
       1123, 1152, 1181, 1185, 9,
       1186, 1215, 1244, 1248, 9,
       1249, 1297, 1343, 1347, 9,
       1348, 1379, 1402, 1406, 9,
       1407, 1429, 1444, 1448, 9,
       1449, 1475, 1494, 1498, 9,
       1499, 1517, 1530, 1538, 9,
       1539, 1555, 1562, 1570, 9,
       1571, 1595, 1610, 1618, 9,
       1619, 1636, 1643, 1647, 9,
       1648, 1677, 1706, 1710, 9,
       1711, 1740, 1769, 1773, 9,
       1774, 1806, 1835, 1839, 9,
       1840, 1872, 1901, 1905, 9,
       1906, 1926, 1935, 1939, 9,
       1940, 1983, 2030, 2034, 9,
       2035, 2069, 2105, 2109, 9,
       2110, 2131, 2138, 2142, 9,
       2143, 2172, 2184, 2188, 9,
       2189, 2199, 2206, 2210, 9,
       2211, 2234, 2239, 2243, 9,
       2244, 2274, 2297, 2301, 9,
       2302, 2330, 2352, 2356, 9,
       2357, 2371, 2377, 2378, 9,
       2379, 2405, 2427, 2431, 9,
       2432, 2449, 2458, 2459, 9,
       2460, 2473, 2478, 2479, 9,
       2480, 2507, 2529, 2533, 9,
       2534, 2561, 2583, 2587, 9,
       2588, 2605, 2614, 2615, 9,
       2616, 2645, 2667, 2671, 9,
       2672, 2691, 2702, 2703, 9,
       2704, 2728, 2750, 2754, 9,
       2755, 2779, 2801, 2805, 9,
       2806, 2830, 2852, 2856, 9,
       2857, 2881, 2903, 2907, 9,
       2908, 2937, 2960, 2964, 9,
       2965, 2986, 3000, 3004, 9,
       3005, 3031, 3050, 3054, 9,
       3055, 3071, 3079, 3080, 9,
       3081, 3095, 3101, 3102, 9,
       3103, 3129, 3147, 3151, 9,
       3152, 3165, 3170, 3171, 9,
       3172, 3186, 3192, 3193, 9,
       3194, 3209, 3216, 3217, 9,
       3218, 3250, 3275, 3279, 9,
       3280, 3300, 3312, 3313, 9,
       3314, 3338, 3360, 3364, 9,
       3365, 3389, 3411, 3415, 9,
       3416, 3443, 3465, 3469, 9,
       3470, 3497, 3519, 3523, 9,
       3524, 3541, 3554, 3558, 9,
       3559, 3572, 3577, 3578, 9,
       3579, 3587, 3588, 3592, 9,
       3593, 3600, 3601, 3605, 9,

 // properties: name, type, flags
       3606, 3612, 0x02015003, 		 // int Block
       3616, 3625, 0x02015003, 		 // int DeviceID
       3629, 3634, 0x02015003, 		 // int Ebit
       3638, 3647, 0x02015003, 		 // int Function
       3651, 3662, 0x02015003, 		 // int HeaderSize
       3666, 3674, 0x02015003, 		 // int MsgSize
       3678, 3684, 0x02015003, 		 // int PType
       3688, 3693, 0x02015003, 		 // int Rbit
       3697, 3703, 0x02015003, 		 // int SType
       3707, 3714, 0x02015003, 		 // int Stream
       3718, 3730, 0x02015003, 		 // int SystemBytes
       3734, 3739, 0x02015003, 		 // int Wbit

        0        // eod
};

static const char *qt_meta_stringdata_EXCOMLib__eXCom() {
    static const char stringdata0[] = {
    "EXCOMLib::eXCom\0"
    "Event Interface 1\0_DeXComEvents\0"
    "SecsEvent(int,int)\0nEventId,lParam\0\0\0SecsMsg()\0\0\0\0exception(int,QString,QString,QString)\0code,source,disc,help\0\0\0propertyChanged(QString)\0name\0\0\0signal(QString,int,void*)\0"
    "name,argc,argv\0\0\0"
    "Close()\0\0int\0\0CloseSecsMsg(int)\0lMsgId\0\0\0DebugInfo(int&)\0pnInfo\0int\0\0EnableLog(int,int)\0nLogType,nEnabled\0int\0\0GeneralCall(int,int,int,int,int)\0lMsgId,nDispatchId,lpDispatchData,lDispatchArg1,lDispatchArg2\0"
    "int\0\0GetAlarmMsgInfo(int,int&,int&,int&,int&,int&)\0lMsgId,pnDevId,pnStrm,pnFunc,plSysByte,pnWbit\0int\0\0GetAsciiItem(int,QString&,int&)\0lMsgId,psValue,plCount\0int\0\0GetBinaryItem(int,int&,int&,int)\0lMsgId,pnValue,plCount,lSize\0"
    "int\0\0GetBoolItem(int,int&,int&,int)\0lMsgId,pnValue,plCount,lSize\0int\0\0GetCurrentItemCount(int)\0lMsgId\0int\0\0GetCurrentItemType(int)\0lMsgId\0int\0\0GetF4Item(int,double&,int&,int)\0lMsgId,prValue,plCount,lSize\0"
    "int\0\0GetF8Item(int,double&,int&,int)\0lMsgId,prValue,plCount,lSize\0int\0\0GetHeaderBytes(int,int&,int)\0lMsgId,pnHeader,nSize\0int\0\0GetI1Item(int,int&,int&,int)\0lMsgId,pnValue,plCount,lSize\0int\0\0GetI2Item(int,int&,int&,int)\0"
    "lMsgId,pnValue,plCount,lSize\0int\0\0GetI4Item(int,int&,int&,int)\0lMsgId,plValue,plCount,lSize\0int\0\0GetI8Item(int,int&,int&,int)\0lMsgId,plValue,plCount,lSize\0int\0\0GetInvalidMsgInfo(int,int&,int&,int&,int&,int&)\0"
    "lMsgId,pnDevId,pnStrm,pnFunc,plSysByte,pnWbit\0int\0\0GetJis8Item(int,QString&,int&)\0lMsgId,psValue,plCount\0int\0\0GetListItem(int,int&)\0lMsgId,pnItems\0int\0\0GetMsgBytes(int,int&,int)\0lMsgId,pnMsg,lSize\0int\0"
    "\0GetParam(QString)\0pszParamName\0QString\0\0GetSecsLog(int)\0lMsgId\0QString\0\0GetStringItem(int,int&)\0lMsgId,plCount\0QString\0\0GetSysBytes(int)\0lMsgId\0int\0\0GetU1Item(int,int&,int&,int)\0lMsgId,pnValue,plCount,lSize\0"
    "int\0\0GetU2Item(int,int&,int&,int)\0lMsgId,plValue,plCount,lSize\0int\0\0GetU4Item(int,double&,int&,int)\0lMsgId,prValue,plCount,lSize\0int\0\0GetU8Item(int,double&,int&,int)\0lMsgId,prValue,plCount,lSize\0int\0\0Initialize(QString)\0"
    "sCfgFile\0int\0\0LoadSecsMsg(int&,int&,int&,int&,int&,int&)\0plMsgId,pnDevId,pnStrm,pnFunc,plSysByte,pnWbit\0int\0\0MakeSecsMsg(int&,int,int,int,int)\0plMsgId,nDevId,nStrm,nFunc,lSysByte\0int\0\0MakeSpoolStream(int)\0"
    "lMsgId\0int\0\0ProcExternalStream(int&,int)\0pnMsg,lSize\0int\0\0Send(int)\0lMsgId\0int\0\0SetAsciiFillSpace(int)\0nVal\0int\0\0SetAsciiItem(int,QString,int)\0lMsgId,pszValue,lCount\0int\0\0SetBinaryItem(int,int&,int)\0lMsgId,pnValue,lCount\0"
    "int\0\0SetBlock(int)\0Block\0\0\0SetBoolItem(int,int&,int)\0lMsgId,pnValue,lCount\0int\0\0SetDeviceID(int)\0DeviceID\0\0\0SetEbit(int)\0Ebit\0\0\0SetF4Item(int,double&,int)\0lMsgId,prValue,lCount\0int\0\0SetF8Item(int,double&,int)\0"
    "lMsgId,prValue,lCount\0int\0\0SetFunction(int)\0Function\0\0\0SetHeaderBytes(int,int&,int)\0lMsgId,pnHeader,nSize\0int\0\0SetHeaderSize(int)\0HeaderSize\0\0\0SetI1Item(int,int&,int)\0lMsgId,pnValue,lCount\0int\0\0SetI2Item(int,int&,int)\0"
    "lMsgId,pnValue,lCount\0int\0\0SetI4Item(int,int&,int)\0lMsgId,plValue,lCount\0int\0\0SetI8Item(int,int&,int)\0lMsgId,plValue,lCount\0int\0\0SetJis8Item(int,QString,int)\0lMsgId,pszValue,lCount\0int\0\0SetListItem(int,int)\0"
    "lMsgId,nItems\0int\0\0SetMsgBytes(int,int&,int)\0lMsgId,pnMsg,lSize\0int\0\0SetMsgSize(int)\0MsgSize\0\0\0SetPType(int)\0PType\0\0\0SetParam(QString,QString)\0psParamName,psVal\0int\0\0SetRbit(int)\0Rbit\0\0\0SetSType(int)\0SType\0"
    "\0\0SetStream(int)\0Stream\0\0\0SetStringItem(int,QString&,int)\0lMsgId,pbstrValue,lCount\0int\0\0SetSystemBytes(int)\0SystemBytes\0\0\0SetU1Item(int,int&,int)\0lMsgId,pnValue,lCount\0int\0\0SetU2Item(int,int&,int)\0lMsgId,plValue,lCount\0"
    "int\0\0SetU4Item(int,double&,int)\0lMsgId,prValue,lCount\0int\0\0SetU8Item(int,double&,int)\0lMsgId,prValue,lCount\0int\0\0SetWBit(int,int)\0lMsgId,nWBit\0int\0\0SetWbit(int)\0Wbit\0\0\0Start()\0\0int\0\0Stop()\0\0int\0\0"
    "Block\0"
    "int\0DeviceID\0int\0Ebit\0int\0Function\0int\0HeaderSize\0int\0MsgSize\0int\0PType\0int\0Rbit\0int\0SType\0int\0Stream\0int\0SystemBytes\0int\0Wbit\0int\0"
    };
    static char data[sizeof(stringdata0) + 0];
    if (!data[0]) {
        int index = 0;
        memcpy(data + index, stringdata0, sizeof(stringdata0) - 1);
        index += sizeof(stringdata0) - 1;
    }

    return data;
};

const QMetaObject eXCom::staticMetaObject = {
{ &QWidget::staticMetaObject,
qt_meta_stringdata_EXCOMLib__eXCom(),
qt_meta_data_EXCOMLib__eXCom }
};

void *eXCom::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_EXCOMLib__eXCom()))
        return static_cast<void*>(const_cast<eXCom*>(this));
    return QAxWidget::qt_metacast(_clname);
}

